#!/usr/bin/env tclsh

# urlview: URL parser and opener
#
# Copyright (C) 2016 Alfredo Mungo <alfredo.mungo@openmailbox.org>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#  
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#  
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# WARNING: Not yet tested for compatibility against RFC-7320
# https://tools.ietf.org/html/rfc7320

package require Tcl 8.6

set data [read stdin]
set match {(?:https?|ftps?|sftp|news|smtps?|imaps?|ssh|mailto|irc|ntp):[/]*(?:(?:[[:alnum:]_~.]|-)+(?::(?:[[:alnum:]_~.]|-)+)?@)?[[:alnum:].-]+(?::\d+)?(?:[/?](?:[[:alnum:]._~=?@+/&]|(?:[%][[:alnum:]]{2})|-)*)?(?:[#](?:[[:alnum:]_~]|-)*)?}

set result [regexp -all -expanded -nocase -inline -- $match $data]

if {[llength $result] == 0} then {
  # No URL found. Quit.
  puts stderr "No URL found."
  exit
}

# Print choices
for {set i 0} {$i < [llength $result]} {incr i} {
  puts "\[$i\]  [lindex $result $i]"
}

# Get the URL choice
set tty [open /dev/tty RDWR]
set choice {}

while {$choice eq ""} {
  puts -nonewline $tty "URL: "
  gets $tty choice

  if {[string is integer -strict $choice] == 1} then {
    # It's an integer
    if {$choice >= 0 && $choice < [llength $result]} then {
      # It's in range
      break
    }
  }

  set choice {}
}

set url [lindex $result $choice]

# Get the program choice
# TODO: Try to load default choice from environment
set program_default {firefox}
set program {}

while {$program eq ""} {
  puts -nonewline $tty "Open with (? for help)\[$program_default\]: "
  gets $tty program

  switch -exact -- $program {
    "?" {
      # Asking for help
      puts $tty "Type in the path of the program you want to open the URL with."
      puts $tty "The string {} will be substituted with the URL before issuing the command."
      puts $tty "If you don't put {} anywhere in the command, the URL will be appended at the end."
      puts $tty "Leave an empty string to run the default command."
      set program {}
    }

    "" {
      set program $program_default
    }
  }
}

if {[regsub -expanded -all -- {{}} $program "{$url}" cmd] == 0} then {
  # URL not specified, just append it
  append cmd " {$url}"
}

close $tty

# Run command
exec -ignorestderr -- {*}$cmd >& /dev/tty
